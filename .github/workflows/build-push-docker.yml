name: Build containers on workflow_dispatch

on:
  workflow_dispatch:
    branches: [ main ]
    inputs:
      build_dir:
        description : 'Build Directory'
        required    : true
        default     : ''
      dockerfile:
        description : 'Dockerfile Name'
        required    : true
        default     : ''
      image_repo:
        description : 'Image Repository'
        required    : true
        default     : ''
      image_tag:
        description : "Image Tag"
        required    : true
        default     : ''
      id:
        description: 'run identifier'
        required: false

jobs:
  choose-runner:
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.choose-runner.outputs.runner }}
    steps:
      - id: choose-runner
        uses: QCDIS/choose-action-runner@v2
        with:
          preferred-runner: ${{ vars.PREFERRED_ACTIONS_RUNNER }}
          fallback-runner: ubuntu-latest
          github-token: ${{ secrets.RUNNER_ACCESS_TOKEN }}

  build-push:
    needs: [choose-runner]
    runs-on: ${{ needs.choose-runner.outputs.runner }}
    name: ${{github.event.inputs.id}}
    steps:
    - uses: actions/checkout@v4

    - name: Login to GitHub Registry
      uses: docker/login-action@v3
      with:
        registry: "https://index.docker.io/v1/"
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Print inputs
      run: |
        echo "context: ${{ github.event.inputs.build_dir }}"
        echo "Dockerfile Name: ${{ github.event.inputs.dockerfile }}"
        echo "Image Repository: ${{ github.event.inputs.image_repo }}"
        echo "Image Tag: ${{ github.event.inputs.image_tag }}"
        echo "Run Identifier: ${{ github.event.inputs.id }}"

    - name: Build docker
      uses: docker/build-push-action@v5
      with:
        context: ${{ github.event.inputs.build_dir }}
        file: ${{ github.event.inputs.build_dir }}/${{ github.event.inputs.dockerfile }}
        tags: ${{ github.event.inputs.image_repo }}/${{ github.event.inputs.image_tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=min
        push: true
